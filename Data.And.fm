// A value (proof) of type `And(A,B)` contains *both*:
// - a value (proof) of the first type, `A`, *and*...
// - a value (proof) of the second type, `B`
T And {A : Type, B: Type}
| both { left : A, right : B }

And.commutation : {~A : Type, ~B : Type , case c : And(A,B) } -> And(B,A)
| both => both(~B,~A,c.right,c.left)

