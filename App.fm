import Nat
import Pair
import String
import Unit

Prop : Type
  Pair(String, String)

// Doc is a renderable document
T Doc
| txt(value : String)
| num(value : Bits)
| img(
  size : Pair(Bits, Bits),
  data : Pair(Bits, Bits) -> Bits)
| box(
  tag : String,
  props : List(Prop),
  children : List(Doc))

// An event
T Event
| mouseclick(x : Bits, y : Bits)
| mousemove(x : Bits, y : Bits)
| keypress(key : Bits)
| keydown(key : Bits)
| keyup(key : Bits)

// App is an interactive application
T App<A>
| app(
  state  : A,
  render : (state : A) -> Doc,
  update : (event : Event, state : A) -> A
)

// Gets the state
get_state(A; app : App(A)) : A
  case app
  | app => app.state
  : A

// Renders the state
get_render(A; app : App(A)) : A -> Doc
  case app
  | app => app.render
  : A -> Doc

// Updates the state
get_update(A; app : App(A)) : Event -> A -> A
  case app
  | app => app.update
  : Event -> A -> A
