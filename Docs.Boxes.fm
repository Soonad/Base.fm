// # Boxes

// As explained previously, Formality includes primitives for performing deep copies of boxed terms:

// syntax         | effect
// ---------------| ---------------------------------------
// `#t`           | Puts term `t` inside a box
// `!T`           | The type of a boxed term
// `dup x = t; u` | Unboxes `t` and copies it as `x` inside `u`

// The `dup` primitive is the one responsible for copying and is extremelly important as it performs those copies lazily, in a way that allows optimal sharing of sub-expressions. It is what makes Formality a great closure evaluator. But, in order to use it properly, you must understand how it is limited: the stratification condition.