import Algebra.Magma open
import Algebra.Semigroup open

T Monoid {A : Type}
| monoid
  { f           : A -> A -> A
  , e           : A
  , associative : Associative(A,f)
  , identity    : Identity(A,f,e)
  }

// Monoids are Semigroups
monoid_to_semigroup : {~A : Type, case m : Monoid(A)} -> Semigroup(A)
| monoid => semigroup(~A, m.f, m.associative)
