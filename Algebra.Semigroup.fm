import Algebra.Magma open

// A Semigroup is an associative Magma
T Semigroup {A : Type}
| semigroup 
  { f           : A -> A -> A
  , associative : Associative(A,f)
  }

magma_to_semigroup :
  { ~A          : Type
  , case m      : Magma(A)
  , associative : Associative(A, case/Magma m | magma => f : A -> A -> A)
  } -> Semigroup(A)
| magma => semigroup(~A, m.f, associative)

// All Semigroups are Magmas
semigroup_to_magma : {~A : Type, case s : Semigroup(A)} -> Magma(A)
| semigroup => magma(~A, s.f)

// A RegularSemigroup is one which has a regular inversion for every element
T RegularSemigroup {A : Type}
| regular_semigroup
  { f           : A -> A -> A
  , associative : Associative(A,f)
  , inversion   : {x : A} -> [y : A, y == f(y,f(x,y))]
  }

// An InverseSemigroup is one which has a unique inversion for every element
T InverseSemigroup {A : Type}
| inverse_semigroup
  { f : A -> A -> A
  , associative : Associative(A,f)
  , inversion : {x : A} -> [y : A, And(x == f(x,f(y,x)), y == f(y,f(x,y)))]
  }
